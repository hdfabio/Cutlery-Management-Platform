// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using mdp.Repository;

namespace mdp.Migrations
{
    [DbContext(typeof(MDPContext))]
    [Migration("20191022093903_InitialMiggration")]
    partial class InitialMiggration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mdp.Model.DTO.OperacaoDTO", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<long>("Duracao");

                    b.Property<Guid?>("PlanoFabricoId");

                    b.HasKey("Id");

                    b.HasIndex("PlanoFabricoId");

                    b.ToTable("OperacaoDTO");
                });

            modelBuilder.Entity("mdp.Model.PlanoFabrico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("PlanosFabrico");
                });

            modelBuilder.Entity("mdp.Model.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("PlanoFabricoId");

                    b.HasKey("Id");

                    b.HasIndex("PlanoFabricoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("mdp.Model.DTO.OperacaoDTO", b =>
                {
                    b.HasOne("mdp.Model.PlanoFabrico")
                        .WithMany("OperacoesDTO")
                        .HasForeignKey("PlanoFabricoId");
                });

            modelBuilder.Entity("mdp.Model.PlanoFabrico", b =>
                {
                    b.OwnsOne("mdp.Model.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("PlanoFabricoId");

                            b1.Property<string>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("Descricao")
                                .HasMaxLength(300)
                                .HasDefaultValue("");

                            b1.HasKey("PlanoFabricoId");

                            b1.ToTable("PlanosFabrico");

                            b1.HasOne("mdp.Model.PlanoFabrico")
                                .WithOne("Descricao")
                                .HasForeignKey("mdp.Model.ValueObjects.Descricao", "PlanoFabricoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("mdp.Model.Produto", b =>
                {
                    b.HasOne("mdp.Model.PlanoFabrico", "PlanoFabrico")
                        .WithMany()
                        .HasForeignKey("PlanoFabricoId");

                    b.OwnsOne("mdp.Model.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId");

                            b1.Property<string>("Value")
                                .HasColumnName("Descricao");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produtos");

                            b1.HasOne("mdp.Model.Produto")
                                .WithOne("Descricao")
                                .HasForeignKey("mdp.Model.ValueObjects.Descricao", "ProdutoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
