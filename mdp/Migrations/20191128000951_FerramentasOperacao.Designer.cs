// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mdp.Repository;

namespace mdp.Migrations
{
    [DbContext(typeof(MDPContext))]
    [Migration("20191128000951_FerramentasOperacao")]
    partial class FerramentasOperacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mdp.Model.Ferramenta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Ferramenta");
                });

            modelBuilder.Entity("mdp.Model.JoiningEntity.FerramentaOperacao", b =>
                {
                    b.Property<Guid>("FerramentaId");

                    b.Property<Guid>("OperacaoId");

                    b.HasKey("FerramentaId", "OperacaoId");

                    b.HasIndex("OperacaoId");

                    b.ToTable("FerramentaOperacao");
                });

            modelBuilder.Entity("mdp.Model.JoiningEntity.PlanoFabricoOperacoes", b =>
                {
                    b.Property<Guid>("OperacaoId");

                    b.Property<Guid>("PlanoFabricoId");

                    b.HasKey("OperacaoId", "PlanoFabricoId");

                    b.HasIndex("PlanoFabricoId");

                    b.ToTable("PlanoFabricoOperacoes");
                });

            modelBuilder.Entity("mdp.Model.Operacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FerramentaId");

                    b.HasKey("Id");

                    b.HasIndex("FerramentaId");

                    b.ToTable("Operacoes");
                });

            modelBuilder.Entity("mdp.Model.PlanoFabrico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("PlanosFabrico");
                });

            modelBuilder.Entity("mdp.Model.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("PlanoFabricoId");

                    b.HasKey("Id");

                    b.HasIndex("PlanoFabricoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("mdp.Model.Ferramenta", b =>
                {
                    b.OwnsOne("mdp.Model.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("FerramentaId");

                            b1.Property<string>("Value")
                                .HasColumnName("Descricao");

                            b1.HasKey("FerramentaId");

                            b1.ToTable("Ferramenta");

                            b1.HasOne("mdp.Model.Ferramenta")
                                .WithOne("Descricao")
                                .HasForeignKey("mdp.Model.ValueObjects.Descricao", "FerramentaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("mdp.Model.ValueObjects.Duracao", "Execucao", b1 =>
                        {
                            b1.Property<Guid>("FerramentaId");

                            b1.Property<long>("Value")
                                .HasColumnName("TempoExecucao");

                            b1.HasKey("FerramentaId");

                            b1.ToTable("Ferramenta");

                            b1.HasOne("mdp.Model.Ferramenta")
                                .WithOne("Execucao")
                                .HasForeignKey("mdp.Model.ValueObjects.Duracao", "FerramentaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("mdp.Model.ValueObjects.Duracao", "Setup", b1 =>
                        {
                            b1.Property<Guid>("FerramentaId");

                            b1.Property<long>("Value")
                                .HasColumnName("TempoSetup");

                            b1.HasKey("FerramentaId");

                            b1.ToTable("Ferramenta");

                            b1.HasOne("mdp.Model.Ferramenta")
                                .WithOne("Setup")
                                .HasForeignKey("mdp.Model.ValueObjects.Duracao", "FerramentaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("mdp.Model.JoiningEntity.FerramentaOperacao", b =>
                {
                    b.HasOne("mdp.Model.Ferramenta", "Ferramenta")
                        .WithMany("FerramentaOperacoes")
                        .HasForeignKey("FerramentaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mdp.Model.Operacao", "Operacao")
                        .WithMany("FerramentaOperacoes")
                        .HasForeignKey("OperacaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mdp.Model.JoiningEntity.PlanoFabricoOperacoes", b =>
                {
                    b.HasOne("mdp.Model.Operacao", "Operacao")
                        .WithMany("PlanoFabricoOperacoes")
                        .HasForeignKey("OperacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mdp.Model.PlanoFabrico", "PlanoFabrico")
                        .WithMany("PlanoFabricoOperacoes")
                        .HasForeignKey("PlanoFabricoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mdp.Model.Operacao", b =>
                {
                    b.HasOne("mdp.Model.Ferramenta", "Ferramenta")
                        .WithMany()
                        .HasForeignKey("FerramentaId");

                    b.OwnsOne("mdp.Model.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("OperacaoId");

                            b1.Property<string>("Value")
                                .HasColumnName("Descricao")
                                .HasMaxLength(300);

                            b1.HasKey("OperacaoId");

                            b1.ToTable("Operacoes");

                            b1.HasOne("mdp.Model.Operacao")
                                .WithOne("Descricao")
                                .HasForeignKey("mdp.Model.ValueObjects.Descricao", "OperacaoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("mdp.Model.ValueObjects.Duracao", "Duracao", b1 =>
                        {
                            b1.Property<Guid>("OperacaoId");

                            b1.Property<long>("Value")
                                .HasColumnName("Duracao");

                            b1.HasKey("OperacaoId");

                            b1.ToTable("Operacoes");

                            b1.HasOne("mdp.Model.Operacao")
                                .WithOne("Duracao")
                                .HasForeignKey("mdp.Model.ValueObjects.Duracao", "OperacaoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("mdp.Model.PlanoFabrico", b =>
                {
                    b.OwnsOne("mdp.Model.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("PlanoFabricoId");

                            b1.Property<string>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("Descricao")
                                .HasMaxLength(300)
                                .HasDefaultValue("");

                            b1.HasKey("PlanoFabricoId");

                            b1.ToTable("PlanosFabrico");

                            b1.HasOne("mdp.Model.PlanoFabrico")
                                .WithOne("Descricao")
                                .HasForeignKey("mdp.Model.ValueObjects.Descricao", "PlanoFabricoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("mdp.Model.Produto", b =>
                {
                    b.HasOne("mdp.Model.PlanoFabrico", "PlanoFabrico")
                        .WithMany()
                        .HasForeignKey("PlanoFabricoId");

                    b.OwnsOne("mdp.Model.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId");

                            b1.Property<string>("Value")
                                .HasColumnName("Descricao");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produtos");

                            b1.HasOne("mdp.Model.Produto")
                                .WithOne("Descricao")
                                .HasForeignKey("mdp.Model.ValueObjects.Descricao", "ProdutoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
